from typing import Dict, List
from dotenv import load_dotenv, find_dotenv
from os import getenv
from aiogram import Bot, Dispatcher
from aiogram.contrib.fsm_storage.memory import MemoryStorage

bot_token = "6150164873:AAHr7sGYxOZTVnUTK4MFfdvsSuA22v55eus"
bot = Bot(token=bot_token)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

if not find_dotenv():
    exit('–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Ç.–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª .env')
else:
    load_dotenv()


def menu() -> Dict:
    """–§—É–Ω–∫—Ü–∏—è-—Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    menu_btns = {"–ó–æ–¥–∏–∞–∫–∞–ª—å–Ω—ã–π üïâ": "zodiak", "–ö–∏—Ç–∞–π—Å–∫–∏–π üàØ": "chinese", "–Ø–ø–æ–Ω—Å–∫–∏–π üà¥": "japanese",
                 "–ì–æ—Ä–æ—Å–∫–æ–ø –¥—Ä—É–∏–¥–æ–≤ üå≥": "druids", "–ì–æ—Ä–æ—Å–∫–æ–ø —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ üéé": "compatibility", "–ü–æ–º–æ—â—å ‚ùì": "help"}
    return menu_btns


def zodiaks() -> Dict:
    """–§—É–Ω–∫—Ü–∏—è-—Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    zodiak = {"‚ôàÔ∏è–û–≤–µ–Ω": "aries", "‚ôâÔ∏è–¢–µ–ª–µ—Ü": "taurus", "‚ôäÔ∏è–ë–ª–∏–∑–Ω–µ—Ü—ã": "gemini", "‚ôãÔ∏è–†–∞–∫": "cancer",
              "‚ôåÔ∏è–õ–µ–≤": "leo", "‚ôçÔ∏è–î–µ–≤–∞": "virgo", "‚ôéÔ∏è–í–µ—Å—ã": "libra", "‚ôèÔ∏è–°–∫–æ—Ä–ø–∏–æ–Ω": "scorpio",
              "‚ôêÔ∏è–°—Ç—Ä–µ–ª–µ—Ü": "sagittarius", "‚ôëÔ∏è–ö–æ–∑–µ—Ä–æ–≥": "capricorn", "‚ôíÔ∏è–í–æ–¥–æ–ª–µ–π": "aquarius", "‚ôìÔ∏è–†—ã–±—ã": "pisces"}
    return zodiak


def zodiaks_compability() -> Dict:
    """–§—É–Ω–∫—Ü–∏—è-—Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    zodiak = {"‚ôàÔ∏è–û–≤–µ–Ω": "oven", "‚ôâÔ∏è–¢–µ–ª–µ—Ü": "telets", "‚ôäÔ∏è–ë–ª–∏–∑–Ω–µ—Ü—ã": "bliznetsy", "‚ôãÔ∏è–†–∞–∫": "rak",
              "‚ôåÔ∏è–õ–µ–≤": "lev", "‚ôçÔ∏è–î–µ–≤–∞": "deva", "‚ôéÔ∏è–í–µ—Å—ã": "vesy", "‚ôèÔ∏è–°–∫–æ—Ä–ø–∏–æ–Ω": "scorpion",
              "‚ôêÔ∏è–°—Ç—Ä–µ–ª–µ—Ü": "strelets", "‚ôëÔ∏è–ö–æ–∑–µ—Ä–æ–≥": "kozerog", "‚ôíÔ∏è–í–æ–¥–æ–ª–µ–π": "vodoley", "‚ôìÔ∏è–†—ã–±—ã": "ruby"}
    return zodiak


def chinese() -> Dict:
    """–§—É–Ω–∫—Ü–∏—è-—Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    animal = {"üêÅ–ö—Ä—ã—Å–∞": "rat", "üêÉ–ë—ã–∫": "bull", "üêØ–¢–∏–≥—Ä": "tiger", "üê∞–ö—Ä–æ–ª–∏–∫": "rabbit",
              "üêâ–î—Ä–∞–∫–æ–Ω": "dragon", "üêç–ó–º–µ—è": "snake", "üê¥–õ–æ—à–∞–¥—å": "horse", "üêë–û–≤—Ü–∞": "sheep",
              "üêµ–û–±–µ–∑—å—è–Ω–∞": "monkey", "üêî–ü–µ—Ç—É—Ö": "cock", "üêï–°–æ–±–∞–∫–∞": "dog", "üê∑–°–≤–∏–Ω—å—è": "pig"}
    return animal


def zodiak_name_list() -> List:
    """–§—É–Ω–∫—Ü–∏—è-—Å–ø–∏—Å–æ–∫ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –≥–æ–¥–æ–≤ –≥–æ—Ä–æ—Å–∫–æ–ø–∞"""
    zodiac_list = ["–≥–æ–¥ –ö—Ä—ã—Å—ã üêÅ", "–≥–æ–¥ –ë—ã–∫–∞ üêÉ", "–≥–æ–¥ –¢–∏–≥—Ä–∞ üêØ", "–≥–æ–¥ –ö—Ä–æ–ª–∏–∫–∞ üê∞", "–≥–æ–¥ –î—Ä–∞–∫–æ–Ω–∞ üêâ", "–≥–æ–¥ –ó–º–µ–∏ üêç",
                   "–≥–æ–¥ –õ–æ—à–∞–¥–∏ üê¥", "–≥–æ–¥ –û–≤—Ü—ã üêë", "–≥–æ–¥ –û–±–µ–∑—å—è–Ω—ã üêµ", "–≥–æ–¥ –ü–µ—Ç—É—Ö–∞ üêî", "–≥–æ–¥ –°–æ–±–∞–∫–∏ üêï", "–≥–æ–¥ –°–≤–∏–Ω—å–∏ üê∑"]
    return zodiac_list


def choice_zodiac() -> Dict:
    buttons = {"–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –ú–æ–π –ó–Ω–∞–∫ –ó–æ–¥–∏–∞–∫–∞ ‚ùì": "what is my zodiac sign",
               "–Ø –∑–Ω–∞—é –°–≤–æ–π –ó–Ω–∞–∫ –ó–æ–¥–∏–∞–∫–∞ üíØ": "i know my zodiac sign"}
    return buttons


def dates() -> Dict:
    """–§—É–Ω–∫—Ü–∏—è-—Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    date = {"–°–µ–≥–æ–¥–Ω—è üìÜ": "today", "–ó–∞–≤—Ç—Ä–∞ üìÜ": "tomorrow", "–ù–µ–¥–µ–ª—è üìÜ": "week",
            "–ú–µ—Å—è—Ü üìÜ": "month", "–ì–æ–¥ üìÜ": "year"}
    return date


def gender() -> Dict:
    """–§—É–Ω–∫—Ü–∏—è-—Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    gen = {"–ú—É–∂—á–∏–Ω–∞üë®‚Äçü¶±": "man", "–ñ–µ–Ω—â–∏–Ω–∞üë©üèª": "woman"}
    return gen


def druid() -> Dict:
    """–§—É–Ω–∫—Ü–∏—è-—Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    druids = {"üçè–Ø–±–ª–æ–Ω—è": "druid_apple", "üåø–ü–∏—Ö—Ç–∞": "druid_fir", "üçÉ–í—è–∑": "druid_elm", "ü™¥–ö–∏–ø–∞—Ä–∏—Å": "druid_cypress",
              "üå≥–¢–æ–ø–æ–ª—å": "druid_poplar", "ü™¥–ö–∞—Ä—Ç–∞—Å": "druid_kartas", "üå≤–°–æ—Å–Ω–∞": "druid_pine", "üåø–ò–≤–∞": "druid_willow",
              "üçÉ–õ–∏–ø–∞": "druid_linden", "ü•ú–û—Ä–µ—à–Ω–∏–∫": "druid_hazel", "üå≥–†—è–±–∏–Ω–∞": "druid_rowan", "üçÅ–ö–ª—ë–Ω": "druid_maple",
              "üå∞–û—Ä–µ—Ö": "druid_nut", "‚òò–ñ–∞—Å–º–∏–Ω": "druid_jasmine", "üå±–ö–∞—à—Ç–∞–Ω": "druid_chestnut", "üå≥–Ø—Å–µ–Ω—å": "druid_ash",
              "üå≥–ì—Ä–∞–±": "druid_hornbeam", "üåø–ò–Ω–∂–∏—Ä": "druid_figs", "üå≥–î—É–±": "druid_oak",  "üçÉ–ë–µ—Ä—ë–∑–∞": "druid_birch",
              "üåø–ú–∞—Å–ª–∏–Ω–∞": "druid_olive", "üå≥–ë—É–∫": "druid_beech"}
    return druids


def druid_date_list() -> List:
    """–§—É–Ω–∫—Ü–∏—è-—Å–ø–∏—Å–æ–∫ —Å –¥–∞—Ç–∞–º–∏ –¥–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –¥—Ä—É–∏–¥–æ–≤"""
    druid_list = ["23.12 - 01.01 | 25.06 - 04.07", "02.01-11.01 | 05.07-14.07", "12.01 - 24.01 | 15.07 - 25.07",
                  "25.01 - 03.02 | 26.07 - 04.08", "04.02 - 08.02 | 05.08 - 13.08", "09.02 - 18.02 | 14.08 - 23.08",
                  "19.02 - 28-29.02 | 24. 08 - 02.09", "01.03 - 10.03 | 03.09 - 12.09", "11.03 - 20.03 | 13.09 - 22.09",
                  "22.03 - 31.03 | 24.09 - 03.10", "01.04 - 10.04 | 04.10 - 13.10", "11.04 - 20.04 | 14.10 - 23.10",
                  "21.04 - 30.04 | 24.10 - 02.11", "01.05 - 14.05 | 03.11 - 11.11", "15. 05 - 24.05 | 12.11 - 21.11",
                  "23.05 - 03.06 | 22.11 - 01.12", "04.06 - 13.06 | 02.12 - 11.12", "14.06 - 23.06 | 12.12 - 21.12",
                  "21.03 - –≤–µ—Å–µ–Ω–Ω–µ–µ —Ä–∞–≤–Ω–æ–¥–µ–Ω—Å—Ç–≤–∏–µ", "24.06 - –ª–µ—Ç–Ω–µ–µ —Å–æ–ª–Ω—Ü–µ—Å—Ç–æ—è–Ω–∏–µ", "23.09 - –æ—Å–µ–Ω–Ω–µ–µ —Ä–∞–≤–Ω–æ–¥–µ–Ω—Å—Ç–≤–∏–µ",
                  "21.12 - 22.12 - –∑–∏–º–Ω–µ–µ —Å–æ–ª–Ω—Ü–µ—Å—Ç–æ—è–Ω–∏–µ"]
    return druid_list


def zodiac_date_list() -> List:
    """–§—É–Ω–∫—Ü–∏—è-—Å–ø–∏—Å–æ–∫ —Å –≥–æ–¥–∞–º–∏ —Ä–æ–∂–¥–µ–Ω–∏—è"""
    zodiac_list = [[str(i) for i in range(1936, 2021, 12)], [str(i) for i in range(1937, 2022, 12)],
                   [str(i) for i in range(1938, 2023, 12)], [str(i) for i in range(1939, 2024, 12)],
                   [str(i) for i in range(1940, 2025, 12)], [str(i) for i in range(1941, 2026, 12)],
                   [str(i) for i in range(1942, 2027, 12)], [str(i) for i in range(1943, 2028, 12)],
                   [str(i) for i in range(1944, 2029, 12)], [str(i) for i in range(1945, 2030, 12)],
                   [str(i) for i in range(1946, 2031, 12)], [str(i) for i in range(1947, 2032, 12)]]
    return zodiac_list


def my_zodiac_year(*args) -> str:
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤ –≥–æ–¥ –∫–∞–∫–æ–≥–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ —Ä–æ–¥–∏–ª—Å—è"""
    result = [args[2][index] for index, value in enumerate(args[1]) if args[0] in value]
    return result[0]


def space_list():
    space = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]
    return space
